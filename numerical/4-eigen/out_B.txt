---------------------------------
Scaling of matrix diagonalization
---------------------------------
To demonstrate the O(n^3) scaling of the matrix diagonalization procedure, a linear fit is applied to the logaritmic (n,t) data.
Fit result:
log(t) = -8.55931501995284 + 2.99004014414642*log(n)
Thus, the scaling must be O(n^3) since the slope is approximately equal to 3.

-----------------------------------------------
Jacobi diagonalization eigenvalue-by-eigenvalue
-----------------------------------------------
Test of eigenvalue-by-eigenvalue routine:
A random symmetric matrix A of dimension 10x10 is generated. Rotation angle should be changed into 0.5*arctan2(-2*Apq, App-Aqq) to achieve largest eigenvalue.

5 lowest eigenvalues of A:
     -13.1      -10.7      -6.41      -2.17       2.53 

5 highest eigenvalues of A:
      53.2       14.4       12.8       7.79          3 

Eigenvalues of A for comparison:
     -13.1      -10.7      -6.41      -2.17       2.53          3       7.79       12.8       14.4       53.2 

Comparison of the two diagonalization routines in terms of number of rotations:
Another random symmetric matrix A of dimension 50x50 is generated.

Cyclic method:
Lowest eigenvalue:                            -38.4442132328575
Amount of rotations (full diagonalization):   6125

Eigenvalue-by-eigenvalue method:
Lowest eigenvalue:                            -38.4442132629664
Amount of rotations (lowest eigenvalue):      16464
Amount of rotations (full diagonalization):   254699

Thus, the eigenvalue-by-eigenvalue method is suitable for calculuating only the lowest eigenvalues of a matrix whereas the cyclic sweep method is faster for full diagonalization.

