---------------------------------
Scaling of matrix diagonalization
---------------------------------
To demonstrate the O(n^3) scaling of the matrix diagonalization procedure, a linear fit is applied to the logaritmic (n,t) data.
Fit result:
log(t) = -8.41241484628627 + 2.95023406329598*log(n)
Thus, the scaling must be O(n^3) since the slope is approximately equal to 3.

-----------------------------------------------
Jacobi diagonalization eigenvalue-by-eigenvalue
-----------------------------------------------
Test of eigenvalue-by-eigenvalue routine:
A random symmetric matrix A of dimension 10x10 is generated. Rotation angle should be changed into 0.5*arctan2(-2*Apq, App-Aqq) to achieve largest eigenvalue.

5 lowest eigenvalues of A:
     -12.3        -11      -6.81       -2.7      0.667 

5 highest eigenvalues of A:
        52       11.8       5.43       3.56       2.31 

Eigenvalues of A for comparison:
     -12.3        -11      -6.81       -2.7      0.667       2.31       3.56       5.43       11.8         52 

Comparison of the two diagonalization routines in terms of number of rotations:
Another random symmetric matrix A of dimension 50x50 is generated.

Cyclic method:
Lowest eigenvalue:                            -39.4977978470038
Amount of rotations (full diagonalization):   6125

Eigenvalue-by-eigenvalue method:
Lowest eigenvalue:                            -39.4977978616679
Amount of rotations (lowest eigenvalue):      2940
Amount of rotations (full diagonalization):   248738

Thus, the eigenvalue-by-eigenvalue method is suitable for calculuating only the lowest eigenvalues of a matrix whereas the cyclic sweep method is faster for full diagonalization.

