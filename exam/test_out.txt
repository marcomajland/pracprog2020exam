--------------------------------------------
Inverse iteration method (Jacobi comparison)
--------------------------------------------
To test the implementation of the inverse iteration method, the algorithm is compared to the Jacobi diagonalization procedure which we implemented in problems 4.
A random real symmetric matrix of dimensions 30x30 is generated and diagonalized using Jacobi diagonalization (implementation may be found in matlib). A random eigenvalue of the Jacobi procedure is chosen as initial guess for the inverse iteration. The initial guess is defined as e_0 = delta*e_i where delta is the deviation from the Jacobi eigenvalue, e_i. The Jacobi eigenvalues are ordered in increasing order such that e_17<e_18<e_19.

Random eigenvalue index:     18

Jacobi eigenvalues:
e_17:                         4.66813771491257
e_18:                         6.05773125503254
e_19:                         6.94629578050504

Inverse iteration method:
Deviation:                    1.05
Initial eigenvalue:           6.36061781778417
Algorithm result:             6.05773256071636
Error:                        2
Iterations:                   3000
Rayleigh updates:             0

Comparison to Jacobi diagonalization:
Abs(e_17 - s):                1.38959484580379
Abs(e_18 - s):                1.30568381795371E-06
Abs(e_19 - s):                0.888563219788678

Eigenvectors of Jacobi diagonalization:

