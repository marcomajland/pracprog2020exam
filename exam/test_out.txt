--------------------------------------------
Inverse iteration method (Jacobi comparison)
--------------------------------------------
To test the implementation of the inverse iteration method, the algorithm is compared to the Jacobi diagonalization procedure which we implemented in problems 4.
A random real symmetric matrix of dimensions 30x30 is generated and diagonalized using Jacobi diagonalization (implementation may be found in matlib). A random eigenvalue of the Jacobi procedure is chosen as initial guess for the inverse iteration. The initial guess is defined as e_0 = delta*e_i where delta is the deviation from the Jacobi eigenvalue, e_i. The Jacobi eigenvalues are ordered in increasing order such that e_17<e_18<e_19.

Random eigenvalue index:     18

Jacobi eigenvalues:
e_17:                         3.58746940363802
e_18:                         4.41850792498134
e_19:                         8.46070751730157

Inverse iteration method:
Deviation:                    1.05
Initial eigenvalue:           4.63943332123041
Algorithm result:             4.41850795377126
Error:                        1.44344838363241E-15
Iterations:                   6
Rayleigh updates:             0

Comparison to Jacobi diagonalization:
Abs(e_17 - s):                0.831038550133242
Abs(e_18 - s):                2.87899144524317E-08
Abs(e_19 - s):                4.04219956353031

Eigenvectors of Jacobi diagonalization:

