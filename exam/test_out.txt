--------------------------------------------
Inverse iteration method (Jacobi comparison)
--------------------------------------------
To test the implementation of the inverse iteration method, the algorithm is compared to the Jacobi diagonalization procedure which we implemented in problems 4.
A random real symmetric matrix of dimensions 30x30 is generated and diagonalized using Jacobi diagonalization (implementation may be found in matlib). A random eigenvalue of the Jacobi procedure is chosen as initial guess for the inverse iteration. The initial guess is defined as e_0 = delta*e_i where delta is the deviation from the Jacobi eigenvalue, e_i. The Jacobi eigenvalues are ordered in increasing order such that e_23<e_24<e_25.

Random eigenvalue index:     24

Jacobi eigenvalues:
e_23:                         13.8234891397857
e_24:                         14.5705644364699
e_25:                         21.2507803323824

Inverse iteration method:
Deviation:                    1.05
Initial eigenvalue:           15.2990926582934
Algorithm result:             14.5705645066612
Error:                        2
Iterations:                   999
Rayleigh updates:             0

Comparison to Jacobi diagonalization:
Abs(e_23 - s):                0.747075366875466
Abs(e_24 - s):                7.01912483691558E-08
Abs(e_25 - s):                6.68021582572121

Eigenvectors of Jacobi diagonalization:

