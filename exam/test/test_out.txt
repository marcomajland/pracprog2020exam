--------------------------------------------
Inverse iteration method (Jacobi comparison)
--------------------------------------------
To test the implementation of the inverse iteration method, the algorithm is compared to the Jacobi diagonalization procedure which we implemented in problems 4.
A random real symmetric matrix of dimensions 30x30 is generated and diagonalized using Jacobi diagonalization (implementation may be found in matlib). A random eigenvalue of the Jacobi procedure is chosen as initial guess for the inverse iteration. The initial guess is defined as e_0 = delta*e_i where delta is the deviation from the Jacobi eigenvalue, e_i. The Jacobi eigenvalues are ordered in increasing order such that e_(i-1)<e_(i)<e_(i+1).

Random eigenvalue index:     23

Jacobi eigenvalues:
e_(i-1):                         14.8409949035707
e_(i):                         17.2783185381864
e_(i+1):                         18.2154808226531

Inverse iteration method:
Deviation:                    1.05
Initial eigenvalue:           18.1422344650957
Algorithm result:             18.2154808213667              18.2154808226392
Iterations:                   4              5
Rayleigh updates:             999

Comparison to Jacobi diagonalization:
Abs(e_(i-1) - s):                3.37448591779599              3.37448591906845
Abs(e_(i) - s):                0.937162283180331                  0.937162284452793
Abs(e_(i+1) - s):                1.28640209595687E-09              1.39408484756132E-11

