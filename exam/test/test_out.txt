--------------------------------------------
Inverse iteration method (Jacobi comparison)
--------------------------------------------
To test the implementation of the inverse iteration method, the algorithm is compared to the Jacobi diagonalization procedure which we implemented in problems 4.
A random real symmetric matrix of dimensions 30x30 is generated and diagonalized using Jacobi diagonalization (implementation may be found in matlib). A random eigenvalue of the Jacobi procedure is chosen as initial guess for the inverse iteration. The initial guess is defined as e_0 = delta*e_i where delta is the deviation from the Jacobi eigenvalue, e_i. The Jacobi eigenvalues are ordered in increasing order such that e_3<e_4<e_5.

Random eigenvalue index:     4

Jacobi eigenvalues:
e_3:                         -20.7881140127321
e_4:                         -18.2195979699899
e_5:                         -18.0118947385416

Inverse iteration method:
Deviation:                    1.05
Initial eigenvalue:           -19.1305778684894
Algorithm result:             -18.2196105222069
Error:                        3.88464082531405E-08
Iterations:                   7
Rayleigh updates:             0

Comparison to Jacobi diagonalization:
Abs(e_3 - s):                2.56850349052525
Abs(e_4 - s):                1.25522169192038E-05
Abs(e_5 - s):                0.207715783665215

Eigenvectors of Jacobi diagonalization:

